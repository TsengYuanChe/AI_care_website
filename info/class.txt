# apps/models.py
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class RawArticle(db.Model):
    __tablename__ = 'raw_articles'
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(255), nullable=False)
    content = db.Column(db.Text, nullable=False)
    url = db.Column(db.String(255), unique=True, nullable=False)
    scraped_at = db.Column(db.DateTime, server_default=db.func.now())

class Category(db.Model):
    __tablename__ = 'categories'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(50), nullable=False, unique=True)
    filtered_articles = db.relationship('FilteredArticle', backref='category', lazy=True)

class FilteredArticle(db.Model):
    __tablename__ = 'filtered_articles'
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(255), nullable=False)
    content = db.Column(db.Text, nullable=False)
    url = db.Column(db.String(255), unique=True, nullable=False)
    view_count = db.Column(db.Integer, default=0)
    category_id = db.Column(db.Integer, db.ForeignKey('categories.id'), nullable=False)
    filtered_at = db.Column(db.DateTime, server_default=db.func.now())